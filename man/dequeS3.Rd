% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00-dequeS3.R
\name{dequeS3}
\alias{dequeS3}
\alias{deque}
\alias{as.deque}
\alias{is.deque}
\alias{addleft}
\alias{rev.Deque}
\title{Deque (double-ended queue)}
\usage{
deque(..., keep_names = FALSE)

as.deque(x)

is.deque(x)

addleft(x, ...)

\method{rev}{Deque}(x)
}
\arguments{
\item{...}{initial elements put into the \code{Deque}.}

\item{keep_names}{\code{logical} TRUE keeps names of passed elements.}

\item{x}{any \code{R} object for \code{\link[=as.deque]{as.deque()}} and \code{\link[=is.deque]{is.deque()}}. An
object of class \code{Deque} for the \code{S3} methods.}

\item{elem}{an \code{R} object of any type}
}
\description{
Deques are a generalization of stacks and queues typically
with methods to add, remove and access elements at both sides of the
underlying data sequence. As such, the \code{\link[=deque]{deque()}} can also be used to mimic
both stacks and queues.
}
\details{
The \code{\link[=Deque]{Deque()}} class inherits from class \code{\link[=Container]{Container()}} and extends
it by \code{pop} and \code{peek} methods, element counting, and reverse and rotate
functionality. For documentation of inherited methods, see \link[=Container]{container()}.

Deque methods:

\itemize{
\item \code{deque(...)} initializes and returns an object of class \code{Deque}
}

\itemize{
\item \code{as.deque(x)} coerces \code{x} to a deque.
}

\itemize{
\item \code{is.deque(x)} returns \code{TRUE} if \code{x} is of class \code{Deque}
and \code{FALSE} otherwise.
}

\itemize{
\item \code{addleft(x, elem)} adds element \code{elem} to the left side of
deque \code{x}.
}

\itemize{
\item \code{rev(x)} reverses all elements of the deque in place and invisibly
returns the \code{\link[=Deque]{Deque()}} object.
}
}
\seealso{
See \code{\link[=container]{container()}} for all inherited methods. For the class
documentation see \code{\link[=Deque]{Deque()}} and it's superclass \link[=container]{Container()}.
}
