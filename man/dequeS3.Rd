% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DequeS3.R, R/add.R
\name{DequeS3}
\alias{DequeS3}
\alias{deque}
\alias{as.deque}
\alias{is.deque}
\alias{rev.Deque}
\alias{addleft.Deque}
\title{Deque (double-ended queue)}
\usage{
deque(...)

as.deque(x)

is.deque(x)

\method{rev}{Deque}(x)

## S3 method for class 'Deque'
addleft(x, ...)
}
\arguments{
\item{...}{initial elements put into the \code{Deque}.}

\item{x}{\code{R} object of \code{ANY} type for \code{\link[=as.deque]{as.deque()}} and \code{\link[=is.deque]{is.deque()}}
or of class \code{Deque} for the \code{S3} methods.}
}
\description{
Deques are a generalization of stacks and queues typically
with methods to add, remove and access elements at both sides of the
underlying data sequence. As such, the \code{\link[=deque]{deque()}} can also be used to mimic
both stacks and queues.
}
\details{
While the \code{\link[=Deque]{Deque()}} class is based on the \code{R6} framework and
provides reference semantics, the methods described here provide an \code{S3}
interface with copy semantics. Note that any \code{S3} methods defined for the
\code{Container} class also work with \code{Deque} objects.
\subsection{Methods}{
}

\itemize{
\item \code{deque(...)} initializes and returns an object of class \code{Deque}
}

\itemize{
\item \code{as.deque(x)} coerces \code{x} to a deque.
}

\itemize{
\item \code{is.deque(x)} returns \code{TRUE} if \code{x} is of class \code{Deque}
and \code{FALSE} otherwise.
}

\itemize{
\item \code{rev(x)} reverses all elements of the deque in place and invisibly
returns the \code{\link[=Deque]{Deque()}} object.
}

\itemize{
\item \code{addleft(x, ...)} add (possibly named) elements to left
side of \code{x}.
}
}
\examples{
d = deque(0)
add(d, a = 1, b = 2)         # |0, a = 1, b = 2|
addleft(d, a = 1, b = 2)     # |b = 2, a = 1, 0|
}
\seealso{
See \code{\link[=container]{container()}} for all inherited methods. For the full class
documentation see \code{\link[=Deque]{Deque()}} and it's superclass \link[=container]{Container()}.
}
