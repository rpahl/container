% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Iterator.R
\docType{class}
\name{Iterator}
\alias{Iterator}
\title{Iterator}
\description{
An \code{Iterator} is an object that allows to iterate over
sequences. It implements \code{next_iter} and \code{get_value} to iterate and retrieve the
value of the sequence it is associated with.
}
\author{
Roman Pahl
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Iterator$new()}}
\item \href{#method-begin}{\code{Iterator$begin()}}
\item \href{#method-get_value}{\code{Iterator$get_value()}}
\item \href{#method-get_next}{\code{Iterator$get_next()}}
\item \href{#method-has_next}{\code{Iterator$has_next()}}
\item \href{#method-length}{\code{Iterator$length()}}
\item \href{#method-pos}{\code{Iterator$pos()}}
\item \href{#method-next_iter}{\code{Iterator$next_iter()}}
\item \href{#method-print}{\code{Iterator$print()}}
\item \href{#method-reset_iter}{\code{Iterator$reset_iter()}}
\item \href{#method-clone}{\code{Iterator$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\code{Iterator} constructor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$new(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{object to iterate over}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisibly returns the \code{Iterator} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-begin"></a>}}
\if{latex}{\out{\hypertarget{method-begin}{}}}
\subsection{Method \code{begin()}}{
set iterator to the first element of the underlying
sequence unless length of sequence is zero, in which case it will
point to nothing.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$begin()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
invisibly returns the \code{Iterator} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_value"></a>}}
\if{latex}{\out{\hypertarget{method-get_value}{}}}
\subsection{Method \code{get_value()}}{
get value where the iterator points to
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$get_value()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
returns the value the \code{Iterator} is pointing at.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_next"></a>}}
\if{latex}{\out{\hypertarget{method-get_next}{}}}
\subsection{Method \code{get_next()}}{
get next value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$get_next()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
increments the iterator and returns the value the \code{Iterator}
is pointing to.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-has_next"></a>}}
\if{latex}{\out{\hypertarget{method-has_next}{}}}
\subsection{Method \code{has_next()}}{
check if \code{iterator} has more elements
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$has_next()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if \code{iterator} has next element else \code{FALSE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-length"></a>}}
\if{latex}{\out{\hypertarget{method-length}{}}}
\subsection{Method \code{length()}}{
iterator length
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$length()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
number of elements to iterate
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pos"></a>}}
\if{latex}{\out{\hypertarget{method-pos}{}}}
\subsection{Method \code{pos()}}{
get iterator position
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$pos()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{integer} if \code{iterator} has next element else \code{FALSE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-next_iter"></a>}}
\if{latex}{\out{\hypertarget{method-next_iter}{}}}
\subsection{Method \code{next_iter()}}{
increment \code{iterator}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$next_iter()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
invisibly returns the \code{Iterator} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
print method
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-reset_iter"></a>}}
\if{latex}{\out{\hypertarget{method-reset_iter}{}}}
\subsection{Method \code{reset_iter()}}{
reset iterator to '0'
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$reset_iter()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
invisibly returns the \code{Iterator} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Iterator$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
