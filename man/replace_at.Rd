% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_at.R
\name{replace_at}
\alias{replace_at}
\alias{replace_at_}
\alias{replace_at.Container}
\alias{replace_at_.Container}
\alias{replace_at.dict.table}
\alias{replace_at_.dict.table}
\title{Strict element replacement at index}
\usage{
replace_at(.x, ...)

replace_at_(.x, ...)

\method{replace_at}{Container}(.x, ..., .add = FALSE)

\method{replace_at_}{Container}(.x, ..., .add = FALSE)

\method{replace_at}{dict.table}(.x, ..., .add = FALSE)

\method{replace_at_}{dict.table}(.x, ..., .add = FALSE)
}
\arguments{
\item{.x}{any \code{R} object.}

\item{...}{indices at which values are to be deleted.}

\item{.add}{\code{logical} if \code{FALSE} (default) and index is invalid, an error is
given. If set to \code{TRUE} the new element is added at the given index
regardless whether the index existed or not. Indices can consist of numbers
or names or both, except when adding values at nex indices, which is only
allowed for names.}

\item{key}{\code{character} name or \code{numeric} index of column.}
}
\value{
For \code{Container}, an object of class \code{Container} (or one of the
respective derived classes).

For \code{dict.table} an object of class \code{dict.table}.
}
\description{
Try to find and replace elements at given indices and signal an
error if not found, unless it is stated to explicitly add the element (see
option \code{add}).
}
\details{
\code{replace_at} uses copy semantics while \code{replace_at_} works by reference.
}
\examples{

dit = dict.table(a = 1:3, b = 4:6)
replace_at(dit, a = 3:1)
replace_at(dit, 1, 3:1)                  # same
replace_at(dit, "a", 3:1)                # same
replace_at(dit, a = 3:1, b = 6:4)
replace_at(dit, 1:2, list(3:1, 6:4))     # same

\dontrun{
replace_at(dit, x = 1)                   # column(s) not found: 'x'}
replace_at(dit, x = 1, .add = TRUE)      # ok (adds column)
}
