% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ContainerS3.R, R/IteratorS3.R,
%   R/Ops-arithmetic.R, R/add.R, R/clear.R, R/clone.R, R/delete.R, R/discard.R,
%   R/empty.R, R/has.R
\name{ContainerS3}
\alias{ContainerS3}
\alias{container}
\alias{as.container}
\alias{as.list.Container}
\alias{is.container}
\alias{length.Container}
\alias{names.Container}
\alias{iter.Container}
\alias{+.Container}
\alias{-.Container}
\alias{add.Container}
\alias{clear.Container}
\alias{clone.Container}
\alias{delete.Container}
\alias{discard.Container}
\alias{empty.Container}
\alias{has.Container}
\title{Container methods}
\usage{
container(...)

as.container(x)

\method{as.list}{Container}(x)

is.container(x)

\method{length}{Container}(x)

\method{names}{Container}(x)

\method{iter}{Container}(x)

\method{+}{Container}(x, y)

\method{-}{Container}(x, y)

## S3 method for class 'Container'
add(x, elem)

\method{clear}{Container}(x)

\method{clone}{Container}(x)

\method{delete}{Container}(x, elem, right = FALSE)

\method{discard}{Container}(x, elem, right = FALSE)

\method{empty}{Container}(x)

\method{has}{Container}(x, elem)
}
\arguments{
\item{...}{initial elements put into the \code{Container}.}

\item{x}{\code{R} object of \code{ANY} type for \code{\link[=as.container]{as.container()}} and \code{\link[=is.container]{is.container()}}
or of class \code{Container} for the \code{S3} methods.}

\item{elem}{some element of any type}

\item{right}{\code{logical} if \code{TRUE}, search from right to left.}
}
\description{
A \code{\link[=Container]{Container()}} is a data structure with typical member
functions to insert, delete and access elements from the container
object. Since the \code{\link[=Container]{Container()}} class mainly serves as the
base class for \code{\link[=Deque]{Deque()}}, \code{\link[=Set]{Set()}}, and \code{\link[=Dict]{Dict()}} objects, users are more
likley to use the corresponding \link[=Deque]{deque()}, \link[=Set]{set()}, and \link[=Dict]{dict()} methods to
create objects of these classes.
}
\details{
While the \code{\link[=Container]{Container()}} class is based on the \code{R6} framework and
provides reference semantics, the methods described here provide an \code{S3}
interface with copy semantics.
\subsection{Methods}{
}

\itemize{
\item \code{container(...)} initializes and returns a \code{\link[=Container]{Container()}} object.
}

\itemize{
\item \code{as.container(x)} coerces \code{x} to a container.
}

\itemize{
\item \code{as.list(x)} converts container \code{x} to a base \code{R} list. All of
the container's elements will copied (deeply) during this conversion so that
the resulting list represents a true copy of the converted container.
}

\itemize{
\item \code{is.container(x)} returns \code{TRUE} if \code{x} is of class \code{Container}
and \code{FALSE} otherwise.
}

\itemize{
\item \code{length(x)} returns the number of elements contained in \code{x}.
}

\itemize{
\item \code{names(x)} returns the names of the elements contained in \code{x}.
}

\itemize{
\item \code{x + y} combines \code{x} and \code{y} element-wise into a new container.
}

\itemize{
\item \code{x - y} element-wise removes all items of \code{y} from \code{x}, given
the element was contained in \code{x}. The result is always a container.
}

\itemize{
\item \code{add(x, elem)} adds \code{elem} to \code{x}.
}

\itemize{
\item \code{clear(x)} removes all elements from \code{x}.
}

\itemize{
\item \code{clone(x)} returns a copy of \code{x}.
}

\itemize{
\item \code{delete(x, elem, right)} finds and removes \code{elem}. If not
found, an error is signaled.
}

\itemize{
\item \code{discard(x, elem, right)} finds and removes \code{elem}. If not found, \code{elem} is ignored.
}

\itemize{
\item \code{empty(x)} returns \code{TRUE} if \code{x} is empty and \code{FALSE} otherwise.
}

\itemize{
\item \code{has(x)} \code{TRUE} if element is in \code{x} and otherwise \code{FALSE}.
}
}
\seealso{
For the \code{Container} class documentation see \code{\link[=Container]{Container()}}.
}
