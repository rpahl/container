% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/container-S3.R
\name{ContainerS3}
\alias{ContainerS3}
\alias{add}
\alias{clear}
\alias{clone}
\alias{discard}
\alias{empty}
\alias{has}
\alias{remove}
\alias{size}
\alias{type}
\alias{values}
\alias{container}
\alias{as.container}
\alias{is.container}
\alias{iter.Container}
\alias{add.Container}
\alias{clear.Container}
\alias{clone.Container}
\alias{discard.Container}
\alias{empty.Container}
\alias{has.Container}
\alias{print.Container}
\alias{size.Container}
\alias{type.Container}
\alias{values.Container}
\title{Container S3 interface
'}
\usage{
add(x, ...)

clear(x)

clone(x, ...)

discard(x, ...)

empty(x)

has(x, ...)

remove(x, ...)

size(x)

type(x)

values(x)

container(x = list())

as.container(x)

is.container(x)

\method{iter}{Container}(x)

\method{add}{Container}(x, elem, ...)

\method{clear}{Container}(x)

\method{clone}{Container}(x, deep = FALSE, ...)

\method{discard}{Container}(x, elem, right = FALSE, ...)

\method{empty}{Container}(x)

\method{has}{Container}(x, elem, ...)

\method{print}{Container}(x, list.len = 10, ...)

\method{size}{Container}(x)

\method{type}{Container}(x)

\method{values}{Container}(x)
}
\description{
This function creates a \code{\link[=Container]{Container()}} object, which is a data
structure with typical member functions to insert, delete and access objects
from the container. Since the \code{\link[=Container]{Container()}} class mainly serves as the
base class for \code{\link[=Deque]{Deque()}}, \code{\link[=Set]{Set()}}, and \code{\link[=Dict]{Dict()}} objects, users are more
likley to use the corresponding \link[=Deque]{deque()}, \link[=Set]{set()}, and \link[=Dict]{dict()} methods to
create objects of the respective derived classes.
}
\details{
For a detailed documentation of all methods see \code{\link[=Container]{Container()}}
}
\seealso{
\code{\link[=Container]{Container()}}, \code{\link[=+.Container]{+.Container()}}, \code{\link[=deque]{deque()}}, \code{\link[=set]{set()}}, \code{\link[=dict]{dict()}}
}
