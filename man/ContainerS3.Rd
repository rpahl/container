% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00-containerS3.R, R/add.R, R/clear.R,
%   R/clone.R, R/iteratorS3.R
\name{ContainerS3}
\alias{ContainerS3}
\alias{container}
\alias{as.container}
\alias{is.container}
\alias{as.list.Container}
\alias{length.Container}
\alias{add.Container}
\alias{clear.Container}
\alias{clone.Container}
\alias{iter.Container}
\title{A sequence Container}
\usage{
container(..., keep_names = FALSE)

as.container(x)

is.container(x)

\method{as.list}{Container}(x)

\method{length}{Container}(x)

\method{add}{Container}(x, elem)

\method{clear}{Container}(x)

\method{clone}{Container}(x)

\method{iter}{Container}(x)
}
\arguments{
\item{...}{initial elements put into the \code{Container}.}

\item{keep_names}{\code{logical} if TRUE, keeps names of passed elements.}

\item{x}{any \code{R} object for \code{\link[=as.container]{as.container()}} and \code{\link[=is.container]{is.container()}}. An
object of class \code{Container} for the \code{S3} methods.}

\item{elem}{some element of any type}
}
\description{
A \code{\link[=Container]{Container()}} is a data structure with typical member
functions to insert, delete and access elements from the container
object. Since the \code{\link[=Container]{Container()}} class mainly serves as the
base class for \code{\link[=Deque]{Deque()}}, \code{\link[=Set]{Set()}}, and \code{\link[=Dict]{Dict()}} objects, users are more
likley to use the corresponding \link[=Deque]{deque()}, \link[=Set]{set()}, and \link[=Dict]{dict()} methods to
create objects of the respective derived classes.
}
\details{
Methods inherited from \code{\link[=Iterable]{Iterable()}}:
\itemize{
\item \code{iter(x)} returns an \code{\link[=Iterator]{Iterator()}} object to iterate over \code{x}. Note that
this works on a copy of \code{x}, that is, changing \code{x} after the iterator was
created will not be accessible by the iterator.
}

Container methods:
\itemize{
\item \code{container(...)} initializes and returns a \code{\link[=Container]{Container()}} object.
}

\itemize{
\item \link{as.container(x)} coerces \code{x} to a container.
}

\itemize{
\item \code{is.container(x)} returns \code{TRUE} if \code{x} is of class \code{Container}.
and \code{FALSE} otherwise.
}

\itemize{
\item \code{as.list(x)} converts container \code{x} to a base \code{R} list.
}

\itemize{
\item \code{length(x)} returns the number of elements in container \code{x}.
}

\itemize{
\item \code{add(x, elem)} adds element \code{elem} to \code{x}.
}

\itemize{
\item \code{clear(x)} removes all elements from \code{x}.
}

\itemize{
\item \code{clone(x)} returns a copy of \code{x}.
}
}
\seealso{
For the class documentation see \code{\link[=Container]{Container()}} and it's derived
classes \code{\link[=Deque]{Deque()}}, \code{\link[=Det]{Det()}}, and \code{\link[=Dict]{Dict()}}.
}
