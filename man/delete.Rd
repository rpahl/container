% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/delete.R
\name{delete}
\alias{delete}
\alias{delete_}
\alias{delete.Container}
\alias{delete_.Container}
\alias{delete.Dict}
\alias{delete_.Dict}
\alias{delete.dict.table}
\alias{delete_.dict.table}
\title{Delete elements}
\usage{
delete(.x, ...)

delete_(.x, ...)

\method{delete}{Container}(.x, ...)

\method{delete_}{Container}(.x, ...)

\method{delete}{Dict}(.x, ...)

\method{delete_}{Dict}(.x, ...)

\method{delete}{dict.table}(.x, ...)

\method{delete_}{dict.table}(.x, ...)
}
\arguments{
\item{.x}{any \code{R} object.}

\item{...}{elements to be deleted. For \code{Container}, \code{Deque} and \code{Set}
objects these will be elements contained in the objects. For \code{Dict} these
are key names. For \code{dict.table} these can be either column names or column
indices or both.}
}
\value{
For \code{Container}, an object of class \code{Container} (or one of the
respective derived classes).

For \code{Dict}, an object of class \code{Dict}.

For \code{dict.table}, an object of class \code{dict.table}.
}
\description{
Search and remove elements from an object. If the element is not found,
an error is signaled.
}
\examples{

s = setnew("a", 1:3, iris)
print(s)
delete(s, 1:3, "a")
delete(s, iris)
\dontrun{
delete(s, "b")  # "b" is not in Set}

d = dict(a = 1, b = 2)
delete(d, "a", "b")
delete(d, c("a", "b"))
\dontrun{
delete(d, "c")   # key 'c' not in Dict}

dit = as.dict.table(head(sleep))
dit
delete(dit, "ID")
delete(dit, "ID", 1)
\dontrun{
delete(dit, "foo")   # Column 'foo' not in dict.table}
}
