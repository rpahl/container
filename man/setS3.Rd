% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Ops-arithmetic.R, R/SetS3.R
\name{+.Set}
\alias{+.Set}
\alias{-.Set}
\alias{SetS3}
\alias{setnew}
\alias{as.set}
\alias{is.set}
\title{Set methods}
\usage{
\method{+}{Set}(x, y)

\method{-}{Set}(x, y)

setnew(...)

as.set(x)

is.set(x)
}
\arguments{
\item{x}{\code{R} object of \code{ANY} type for \code{\link[=as.set]{as.set()}} and \code{\link[=is.set]{is.set()}}
or of class \code{Set} for the \code{S3} methods.}

\item{...}{initial elements put into the \code{Set}.}
}
\value{
For \code{Set}, \code{+} returns the set union of x and y. Result is always a
valid set.

For \code{Set}, \code{-} returns the set-difference of x and y. Result is
always a valid set.
}
\description{
The \code{\link[=Set]{Set()}} is considered and implemented as a specialized
\code{\link[=Container]{Container()}}, that is, \code{Set} elements are always unique. It provides
typical set operations such as \code{union} and \code{intersect}.
}
\details{
While the \code{\link[=Set]{Set()}} class is based on the \code{R6} framework and
provides reference semantics, the methods described here provide an \code{S3}
interface with copy semantics. Note that any \code{S3} methods defined for the
\code{Container} class also work with \code{Set} objects.
\subsection{Methods}{
}

\itemize{
\item \code{setnew(...)} initializes and returns a \code{\link[=Set]{Set()}} object.
}

\itemize{
\item \code{as.set(x)} coerces \code{x} to a set.
}

\itemize{
\item \code{is.set(x)} returns \code{TRUE} if \code{x} is of class \code{Set} and \code{FALSE}
otherwise.
}
}
\examples{
s1 = setnew(1, 1:2)
s2 = setnew(2, 1:2)
s1 + s2     # same as s1 | s2 or c(c1, s2)
s2 + s1     # same
s1 - s2
s2 - s1

s = setnew(1, b = NA, 1:3, c = container("a", 1))
is.set(s)
print(s)
length(s)
names(s)
as.list(s)
na.omit(s)
unpack(s)   # flatten recursively similar to unlist

}
\seealso{
See \code{\link[=container]{container()}} for all inherited methods. For the full class
documentation see \code{\link[=Set]{Set()}} and it's superclass \link[=container]{Container()}.
}
